#

###
###    _____      ____ _ _   _ _ __ ___
###   / __\ \ /\ / / _` | | | | '__/ __|
###  _\__ \\ V  V / (_| | |_| | | | (__
### (_)___/ \_/\_/ \__,_|\__, |_|  \___|
###                      |___/
###
###   # # # # # #
###        #
###   # # # # # #
###

# : '
# .swayrc
# sway runcom configuration
# copyright (c) 2018 - 2024  |  oxo
#
# GNU GPLv3 GENERAL PUBLIC LICENSE
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# https://www.gnu.org/licenses/gpl-3.0.txt
#
# @oxo@qoto.org
#
#
# # dependencies
#   grim, jq, notify-send, vtxt
#   $XDG_CONFIG_HOME/sway
#   $XDG_CONFIG_HOME/i3blocks
#
# # usage
#   n/a
#
# # examples
#   n/a
#
# # '


## disable Xwayland (X clients under Wayland) support
#xwayland disable


# system identity
## change symlink for specific system config
include $XDG_CONFIG_HOME/sway/current

## sway code directory
set $csc		"$XDG_CONFIG_HOME/sway/code"
set $i3b_cycle 		"$XDG_CONFIG_HOME/i3blocks/cycle"


#----------------------------------------------------------------
## general settings ##
#----------------------------------------------------------------

# input profiles

# hide mouse cursor when inactive
seat seat0 hide_cursor 5000
seat * hide_cursor when-typing enable

### general
#input type:touchpad
### specific
input $touchpad
{
    dwt			enabled
    dwtp		enabled
    tap			enabled
    natural_scroll	enabled
    accel_profile	adaptive
    pointer_accel	1
}

## external touchpad
### general
#input type:touchpad
### specific
input $touchpad_ext
{
    dwt			enabled
    dwtp		enabled
    tap			enabled
    natural_scroll	enabled
    accel_profile	adaptive
    pointer_accel	1
}

## NOTICE
## $XKB_DEFAULT_OPTIONS must been set
## before sway has been started
## for zsa moonlander xkb_options to work
## (see zshenv XKB_DEFAULT_OPTIONS)

## xkb_options: man 7 xkeyboard-config

### set caps = esc
#   xkb_options		caps:escape,compose:ralt
### set shiftL+shiftR = caps
#   xkb_options		shift:both_capslock
### swap caps and left ctrl
#   xkb_options		ctrl:swapcaps
### set caps = ctrl
#   xkb_options		ctrl:nocaps
### set ralt as compose key
#   xkb_options		compose:ralt
### multiple options
#   xkb_options		ctrl:nocaps,compose:ralt

## keyboard
### general
#input type:keyboard
### specific
input $keyboard
{
    xkb_options		compose:ralt,caps:escape,shift:both_capslock
    repeat_delay	500
    repeat_rate		20
}

## external keyboard
### general
#input type:keyboard
## specific
input $keyboard_ext
{
    xkb_options		compose:ralt,shift:both_capslock
    repeat_delay	500
    repeat_rate		20
    #xkb_numlock	enabled
}

## mouse
### general
input $kb_mouse
{
    # converts left and right button click into a middle button
    # enable emulation when the device does not provide a middle button
    middle_emulation	disabled
}

## modkey settings (xmodmap)
# use wev to designate events
# Shift	    Shift_L (0x32),  Shift_R (0x3e)
# Lock      Caps_Lock (0x42)
# Control   Control_L (0x10),  Control_R (0x69)
# Mod1      Alt_L (0x40),  Meta_L (0xcd)
# Mod2      Num_Lock (0x94)
# Mod3
# Mod4      Super_R (0x86),  Super_L (0xce),  Hyper_L (0xcf)
# Mod5      ISO_Level3_Shift (0x5c),  ISO_Level3_Shift (0x6c),  Mode_switch (0x85),  Mode_switch (0xcb)
#
# Mod1	    alt key
# Mod4	    logo key

set $mod		Mod4


# output devices
# https://wiki.archlinux.org/index.php/Sway#Input_devices
# output device info via:
# swaymsg -t get_outputs
# output manpage via:
# man sway-output


# generic background (wallpaper)
## on all output names
## override in specific output name
## background image with fallback color
## ln -s $XDG_DATA_HOME/a/media/image/wallpaper/$image $XDG_DATA_HOME/a/media/image/wallpaper/active
#output * background	$XDG_DATA_HOME/a/media/images/wallpaper/active fit #000000
## solid color
output * background	#000000 solid_color


# laptop internal displays
## top left is pos 0 0
## y axis is inverted
## scaling has to be considered

## dell_latitude_3189
### maximum performance		mode 1366x768 scale 1.0 pos 0 0
#output eDP-1			mode 1366x768 scale 1.0 pos 0 0

## dell_xps13_9360
### maximum performance:	mode 3200x1800 scale 2.0 pos 0 1440
## output eDP-1			mode 3200x1800 scale 2.0 pos 0 1440

## lenovo_thinkpad_x220
### Seiko Epson Corporation 0x3047 0x00000000
### maximum performance:	mode 1366x768 @ 60.002 Hz
# output LVDS-1			mode 1366x768 scale 1.0 pos 0 0

## tuxedo_pulse_15
### Sharp Corporation LQ156M1JW01
### maximum performance:	mode 1920x1080 @ 60.042000 Hz
#output eDP-1
#{
#    mode		1920x1080
#    pos		2560 0
#    scale		1.0
#    transform		0
#}

## lenovo thinkpad x1c
### Chimei Innolux Corporation 0x1417 0x00000000
### 1440 is $y_res_ext > read important notice below
#output eDP-1		mode 1920x1200 scale 1.0 pos 0 0
#output eDP-1		mode 1920x1200 scale 1.0 pos 0 1440


# external monitors

## dell_u2715h (hdmi)
## left of main		(-1*$x_res_ext ; 0)
## under main		(0 ; $y_res_ext)
## above main		(0 ; -1*$y_res_ext)
## right of main	($x_res_main ; 0)

## only pos is set here; mode and scale are defined in: sway/hw/dev/ext
#output HDMI-A-1		pos -2560 0

## IMPORTANT NOTICE
## negative coordinates cause problems with mouse scroll and -clicks on xwayland windows
## 20240314_180925 oxo : like gimp and emacs had this problem; could not click or scroll
## [Sections of Xwayland windows within negative output coordinates receive incorrectly positioned cursor events
## · Issue #958 · swaywm/wlroots · GitHub](https://github.com/swaywm/wlroots/issues/958)

## WORKAROUND
## when ext is above or left of main (negative x resp y coordinates):
## set ext display coordinates to pos 0 0 (instead of the main monitor)
output HDMI-A-1		pos 0 0
## then adjust the main monitor pos to ext display with positive coordinates
### ext is above main
#output eDP-1		pos 0 $hdmi_y_res
### ext is left of main
output eDP-1		pos $hdmi_x_res 0

## focus on sway launch
#focus			output eDP-1

## bind workspace to monitor
workspace 0		output HDMI-A-1

## clamshell mode
set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable


# swaynag keyboard control

set $nag		exec swaynagmode

mode "nag"
{
    bindsym
    {
    	Ctrl+d		mode "default"

    	Return		$nag --confirm

        Ctrl+c		$nag --exit
        q		$nag --exit
        Escape		$nag --exit

        Up		$nag --select next
        Left		$nag --select next
        Shift+Tab	$nag --select next

        Down		$nag --select prev
        Right		$nag --select prev
        Tab		$nag --select prev
    }
}

swaynag_command		swaynagmode
#DEV generate error 	remove comment


# cursor
# [https://wiki.archlinux.org/title/Sway#Statusbar](https://wiki.archlinux.org/title/Sway#Change_cursor_theme_and_size)
# seat seat0 xcursor_theme my_cursor_theme my_cursor_size


# font
# font for window titles and bar
## NOTICE changing font size defined in terminal emulator
set $font		"Source Code Pro 10"
font			$font


# gaps
gaps inner			0
gaps outer			0
smart_gaps			on
bindsym $mod+Ctrl+bracketleft	gaps inner current plus 5
bindsym $mod+Ctrl+bracketright	gaps inner current minus 5
bindsym $mod+Ctrl+slash		gaps inner current set 0; gaps outer current set 0


# set terminal
set $term		alacritty
#set $term_bu		alacritty
#set $term		foot
set $term_bu		foot


# keyboard mouse control

## dotool daemon
exec_always		dotoold

## jump to grid
## dotool origo O(0,0) is NW corner
## sway-output origo O(0,0) is NW corner (see man sway-output)
bindsym Mod1+Shift+i		exec echo mouseto 0.500 0.165 | dotoolc  ## N
bindsym Mod1+Shift+o		exec echo mouseto 0.835 0.165 | dotoolc  ## NE
bindsym Mod1+Shift+l		exec echo mouseto 0.835 0.500 | dotoolc  ## E
bindsym Mod1+Shift+Period	exec echo mouseto 0.835 0.835 | dotoolc  ## SE
bindsym Mod1+Shift+Comma	exec echo mouseto 0.500 0.835 | dotoolc  ## S
bindsym Mod1+Shift+m		exec echo mouseto 0.165 0.835 | dotoolc  ## SW
bindsym Mod1+Shift+j		exec echo mouseto 0.165 0.500 | dotoolc  ## W
bindsym Mod1+Shift+u		exec echo mouseto 0.165 0.165 | dotoolc  ## NW
bindsym Mod1+Shift+k		exec echo mouseto 0.500 0.500 | dotoolc  ## Z

## move
set $kb_mouse_major_move		100
set $kb_mouse_regular_move		10
set $kb_mouse_minor_move		1

#bindsym Mod1+y			exec echo mousemove -$kb_mouse_major_move 0 | dotoolc  ## left
#bindsym Mod1+u			exec echo mousemove 0 $kb_mouse_major_move  | dotoolc  ## down
#bindsym Mod1+i			exec echo mousemove 0 -$kb_mouse_major_move | dotoolc  ## up
#bindsym Mod1+o			exec echo mousemove $kb_mouse_major_move 0  | dotoolc  ## right

bindsym Mod1+h			exec echo mousemove -$kb_mouse_regular_move 0 | dotoolc  ## left
bindsym Mod1+j			exec echo mousemove 0 $kb_mouse_regular_move  | dotoolc  ## down
bindsym Mod1+k			exec echo mousemove 0 -$kb_mouse_regular_move | dotoolc  ## up
bindsym Mod1+l			exec echo mousemove $kb_mouse_regular_move 0  | dotoolc  ## right

bindsym Mod1+n			exec echo mousemove -$kb_mouse_minor_move 0 | dotoolc  ## left
bindsym Mod1+m			exec echo mousemove 0 $kb_mouse_minor_move  | dotoolc  ## down
bindsym Mod1+Comma		exec echo mousemove 0 -$kb_mouse_minor_move | dotoolc  ## up
bindsym Mod1+Period		exec echo mousemove $kb_mouse_minor_move 0  | dotoolc  ## right

## button events
### click
bindsym Mod1+u			exec echo click left | dotoolc
bindsym Mod1+i			exec echo buttonup middle; click middle | dotoolc
bindsym Mod1+o			exec echo buttonup right; click right | dotoolc
### hold down
bindsym Mod1+y			exec echo buttondown left | dotoolc
bindsym Mod1+8			exec echo buttondown middle | dotoolc
bindsym Mod1+p			exec echo buttondown right | dotoolc
### wheel
bindsym Mod1+Left		exec echo hwheel -1 | dotoolc
bindsym Mod1+Down		exec echo wheel -1 | dotoolc
bindsym Mod1+Up			exec echo wheel 1 | dotoolc
bindsym Mod1+Right		exec echo hwheel 1 | dotoolc


#----------------------------------------------------------------
## workspace settings ##
#----------------------------------------------------------------

# assign workspaces
## ws0 named '0' (number) sorts before 1
## ws0 named 'O' (letter) sorts after 9, like the keyboard

## workspace names
#set $ws0		    "O"
set $ws0		    "0"
set $ws1		    "1"
set $ws2		    "2"
set $ws3		    "3"
set $ws4		    "4"
set $ws5		    "5"
set $ws6		    "6"
set $ws7		    "7"
set $ws8		    "8"
set $ws9		    "9"
set $ws-		    "-"
set $ws=		    "="

## switch to workspace
bindsym $mod+1		    workspace $ws1
bindsym $mod+2		    workspace $ws2
bindsym $mod+3		    workspace $ws3
bindsym $mod+4		    workspace $ws4
bindsym $mod+5		    workspace $ws5
bindsym $mod+6		    workspace $ws6
bindsym $mod+7		    workspace $ws7
bindsym $mod+8		    workspace $ws8
bindsym $mod+9		    workspace $ws9
bindsym $mod+0		    workspace $ws0
bindsym $mod+Minus	    workspace $ws-
bindsym $mod+Equal	    workspace $ws=

## move focused container to workspace
bindsym $mod+Shift+1	    move container to workspace $ws1
bindsym $mod+Shift+2	    move container to workspace $ws2
bindsym $mod+Shift+3	    move container to workspace $ws3
bindsym $mod+Shift+4	    move container to workspace $ws4
bindsym $mod+Shift+5	    move container to workspace $ws5
bindsym $mod+Shift+6	    move container to workspace $ws6
bindsym $mod+Shift+7	    move container to workspace $ws7
bindsym $mod+Shift+8	    move container to workspace $ws8
bindsym $mod+Shift+9	    move container to workspace $ws9
bindsym $mod+Shift+0	    move container to workspace $ws0
bindsym $mod+Shift+Minus    move container to workspace $ws-
bindsym $mod+Shift+Equal    move container to workspace $ws=


# workspace specific keybindings

## workspace switching
### keyboard
bindsym $mod+tab		workspace back_and_forth
### mouse
workspace_auto_back_and_forth	yes

## workspace next previous
#bindsym $mod+bracketright	workspace next
#bindsym $mod+bracketleft	workspace prev

## workspace next previous
## key on virtual ansi numeric keyboard layer (moonlander)
## key: o = 9 (pgup)
## key: . = . (pgdn)
bindsym $mod+o			workspace prev
bindsym $mod+Period		workspace next

## fzf_sway_focus 		(focus switcher)
bindsym $mod+grave		exec $term --class="float_spicules" -e \
				$csc/fzf-sway-focus

## move workspace to output
bindsym $mod+Mod1+Shift+h	move container to output left
bindsym $mod+Mod1+Shift+j	move container to output down
bindsym $mod+Mod1+Shift+k	move container to output up
bindsym $mod+Mod1+Shift+l 	move container to output right


# display workspace bar ##

## swaybar
### custom bar location
#set $bar_custom		$XDG_CONFIG_HOME/code/waybar/bar_custom

bar
{
    position		    	top
    height			18
    font			Source Code Pro 11
    swaybar_command		swaybar
    status_command		i3blocks
    wrap_scroll			no

    colors
    {
    	   ### item		color	  border    backgr    text
    	   background		#00000095
	   statusline		#777777
	   separator		#777777
	   focused_background	#00000095
	   focused_statusline	#777777
	   focused_separator	#ffffff
	   focused_workspace		  #000020   #000020   #999999
	   active_workspace		  #00000095 #77777795 #000000
	   inactive_workspace		  #00000095 #00000095 #555555
	   urgent_workspace		  #ff73fd95 #ff73fd95 #ffffd3
    }
}

### bar toggle (hide)
bindsym $mod+b			bar mode toggle

### bar blocks cycle
bindsym $mod+Control+b 		exec $i3b_cycle


# # # waybar
# # # $XDG_CONFIG_HOME/waybar
# # ## https://github.com/Alexays/Waybar/issues/308
# # ## bar block causes second waybar on refresh
# # ## it also is prone to decoration errors
# # bar
# # {
# #    swaybar_command		waybar
# # }
# #  as recommended here:
# #  https://github.com/Alexays/Waybar/wiki/FAQ#how-to-use-with-sway
# #  exec waybar
# #  is moved to the end of the config file

# # # hide waybar
# # bindsym $mod+b		exec killall -SIGUSR1 waybar


# window configuration
## no title bar
default_border		none
#default_border 		pixel	1
## color
### item		border	backgr	text	indictr	child_border
client.focused		#000000 #000000 #999999 #000000 #00557775
client.focused_inactive	#000000 #000000 #333333 #000000 #000000
client.unfocused	#000000 #000000 #333333 #000000 #000000
client.urgent		#000000 #000000 #ff0000 #000000 #ff0000

## cycle through border styles
bindsym $mod+Shift+bracketleft	border toggle
#bindsym $mod+Shift+b	border toggle


# start with touchpad disabled
input $touchpad		events disabled

# peek at the bar
floating_modifier	$mod


# toggle touchpad device
bindsym $mod+Shift+space    exec swaymsg input $touchpad \
			    events toggle enabled disabled \
			    && notify-send 'touchpad'

# toggle trackpoint device
bindsym $mod+Shift+b	    exec swaymsg input $trackpoint \
			    events toggle enabled disabled \
			    && notify-send 'trackpoint'

# toggle touchscreen device
bindsym $mod+Shift+v	    exec swaymsg input $touchscreen \
			    events toggle enabled disabled \
			    && notify-send 'touchscreen'

# focus follows mouse
focus_follows_mouse	no


# mouse warping (mouse follows focus)
## set to container: moonlander mousewheel
mouse_warping		output


#----------------------------------------------------------------
# navigational keybindings
#----------------------------------------------------------------

# container (window)
# output (monitor)

# container
## focus		$mod
## move			$mod+Shift
## resize		$mod+Control
## float		$mod_Mod1

# navigation direction
## default
set $left		h
set $down		j
set $up			k
set $right		l
## major
set $la			y
set $da			u
set $ua			i
set $ra			o
## minor
set $li			n
set $di			m
set $ui			Comma
set $ri			Period


# change window focus
## $mod+hjkl
bindsym $mod+$left		focus left
bindsym $mod+$down	        focus down
bindsym $mod+$up		focus up
bindsym $mod+$right		focus right


#----------------------------------------------------------------
# move focused window
#----------------------------------------------------------------

## mouse method
## $mod+MouseLeft and manually move container

## move parameters
set $smt			exec sh $csc/snap-move-to
set $move_major_step		100
set $move_regular_step		20
set $move_minor_step		10

## $mod+Shift+hjkl		(regular movement)
bindsym $mod+Shift+$left	$smt left $move_regular_step px or $move_regular_step ppt
bindsym $mod+Shift+$down	$smt down $move_regular_step px or $move_regular_step ppt
bindsym $mod+Shift+$up		$smt up $move_regular_step px or $move_regular_step ppt
bindsym $mod+Shift+$right	$smt right $move_regular_step px or $move_regular_step ppt

## $mod+Shift+yuio		(major movement)
bindsym $mod+Shift+$la		$smt left $move_major_step px or $move_major_step ppt
bindsym $mod+Shift+$da		$smt down $move_major_step px or $move_major_step ppt
bindsym $mod+Shift+$ua		$smt up $move_major_step px or $move_major_step ppt
bindsym $mod+Shift+$ra		$smt right $move_major_step px or $move_major_step ppt

## $mod+Shift+nm,.		(minor movement)
bindsym $mod+Shift+$li		$smt left $move_minor_step px or $move_minor_step ppt
bindsym $mod+Shift+$di		$smt down $move_minor_step px or $move_minor_step ppt
bindsym $mod+Shift+$ui		$smt up $move_minor_step px or $move_minor_step ppt
bindsym $mod+Shift+$ri		$smt right $move_minor_step px or $move_minor_step ppt

## container float
### snap to screen edge; centered
### $mod+Mod1+j,il
bindsym $mod+Mod1+j		$smt W
bindsym $mod+Mod1+Comma		$smt S
bindsym $mod+Mod1+i          	$smt N
bindsym $mod+Mod1+l		$smt E

## snap to screen corner
### $mod+Mod4+uom.
### virtual numeric keyboard as compass rose for corners
bindsym $mod+Mod1+u		$smt NW
bindsym $mod+Mod1+o		$smt NE
bindsym $mod+Mod1+m		$smt SW
bindsym $mod+Mod1+Period	$smt SE

## snap to screen center
### $mod+Mod1+5
bindsym $mod+Mod1+k		$smt Z


## container dividing parameters
set $con_hexa			exec sh $csc/con-hexapart $1
set $con_max			exec sh $csc/con-max
set $con_min			exec sh $csc/con-min
set $con_vfill			exec sh $csc/con-v-fill
set $con_hfill			exec sh $csc/con-h-fill

## container float; minimize
### $mod+Control+0
bindsym $mod+Mod1+0		$con_min  ## container minimize

## container float; maximize
### $mod+Mod1+9
#bindsym $mod+Mod1+9		exec notify-send 'DEV660 sway config'
bindsym $mod+Mod1+9		$con_max  ## container maximize

## toggle container type and set it's width in hexapart (1/6)
### $mod+Mod1+123456
### TODO mpv doesn't resize properly while playing video
bindsym $mod+Mod1+1		$con_hexa 1  ## container toggle float/tile width 1 hexapart
bindsym $mod+Mod1+2		$con_hexa 2  ## container toggle float/tile width 2 hexaparts
bindsym $mod+Mod1+3		$con_hexa 3  ## container toggle float/tile width 3 hexaparts
bindsym $mod+Mod1+4		$con_hexa 4  ## container toggle float/tile width 4 hexaparts
bindsym $mod+Mod1+5		$con_hexa 5  ## container toggle float/tile width 5 hexaparts
bindsym $mod+Mod1+6		$con_hexa 6  ## container toggle float/tile width 6 hexaparts

## toggle container type and snap fill screen edge
### $mod+Mod1+h8
bindsym $mod+Mod1+7		$con_vfill  ## container toggle float/tile snap fill right edge
bindsym $mod+Mod1+8		$con_hfill  ## container toggle float/tile snap fill bottom edge


#----------------------------------------------------------------
# resize focused window
#----------------------------------------------------------------

## mouse method
## $mod+MouseRight+mouse_move resizes container

## container SE corner adjusts resize
set $resize_major_step		100
set $resize_regular_step	20
set $resize_minor_step		10

## $mod+Control+hjkl		(regular adjustment)
bindsym $mod+Control+$left	resize shrink width $resize_regular_step px or $resize_regular_step ppt
bindsym $mod+Control+$down	resize grow height $resize_regular_step px or $resize_regular_step ppt
bindsym $mod+Control+$up	resize shrink height $resize_regular_step px or $resize_regular_step ppt
bindsym $mod+Control+$right	resize grow width $resize_regular_step px or $resize_regular_step ppt

## $mod+Control+yuio		(major adjustment)
bindsym $mod+Control+$la	resize shrink width $resize_major_step px or $resize_major_step ppt
bindsym $mod+Control+$da	resize grow height $resize_major_step px or $resize_major_step ppt
bindsym $mod+Control+$ua	resize shrink height $resize_major_step px or $resize_major_step ppt
bindsym $mod+Control+$ra	resize grow width $resize_major_step px or $resize_major_step ppt

## $mod+Control+nm,.		(minor adjustment)
bindsym $mod+Control+$li	resize shrink width $resize_minor_step px or $resize_minor_step ppt
bindsym $mod+Control+$di	resize grow height $resize_minor_step px or $resize_minor_step ppt
bindsym $mod+Control+$ui	resize shrink height $resize_minor_step px or $resize_minor_step ppt
bindsym $mod+Control+$ri	resize grow width $resize_minor_step px or $resize_minor_step ppt


# close (quit) container
bindsym $mod+Shift+q		kill


#----------------------------------------------------------------
# change container layout
#----------------------------------------------------------------

## split horizontal / vertical toggle
## next new container below / aside
bindsym $mod+backslash		layout toggle split; exec $csc/layout-ntfy-send

## cycle through all layouts
bindsym $mod+Shift+backslash	layout toggle splith splitv stacking tabbed; exec $csc/layout-ntfy-send



# adjust opacity of the focused container
# opacity + transparency = 1
## NOTICE terminal emulator opacity configuration interferes
bindsym $mod+Control+Minus   	    exec swaymsg opacity minus 0.1
bindsym $mod+Control+Shift+Minus    exec swaymsg opacity plus 0.1
bindsym $mod+Control+Equal	    exec swaymsg opacity 1.0
bindsym $mod+Control+0		    exec swaymsg opacity 0.0

# enter fullscreen mode for the focused window
bindsym $mod+f		        fullscreen toggle

# focus parent container
#bindsym $mod+a			focus parent  ## default
#bindsym $mod+p			focus parent  ## replaced by screen capture


# focus child container
#bindsym $mod+i			focus child  ## default
bindsym $mod+c			focus child


# toggle focus mode tiling / floating
## status is visible in swaybar window
bindsym $mod+semicolon		focus mode_toggle


# toggle focused window tiling / floating
bindsym $mod+Mod1+semicolon 	floating toggle
## mouse method
bindsym --whole-window $mod+BTN_MIDDLE	floating toggle


# toggle floating window sticky (always on top)
bindsym $mod+Mod1+s	 	sticky toggle


# move focused container to scratchpad
bindsym $mod+Shift+slash	move scratchpad

# show next scratchpad container or hide focused scratchpad container
# cycle through multiple scratchpad containers
bindsym $mod+slash		scratchpad show


#----------------------------------------------------------------
# other keybindings
#----------------------------------------------------------------

## spawn a terminal emulator
### container tile split_auto direction
### spawns same type as focused container
### cwd $HOME
bindsym $mod+Return		exec --no-startup-id $csc/term-spawn &
### cwd $PWD
bindsym $mod+Shift+Return	exec --no-startup-id $csc/term-spawn pwd &
### cwd float $HOME
bindsym $mod+Mod1+Return	exec --no-startup-id $csc/term-spawn $HOME float &
### cwd $PWD
bindsym $mod+Mod1+Shift+Return	exec --no-startup-id $csc/term-spawn pwd float &


## fzf_run
### foot
#bindsym $mod+d			exec $term --app-id="float_fzf_run" \
#				sh -c $csc/fzf-run
### alacritty
bindsym $mod+d			exec --no-startup-id $term --class="float_fzf_run" \
				--config-file $XDG_CONFIG_HOME/alacritty/bg_blue.toml \
				-e $csc/fzf-run

## fzf_spicules			(search cmd_catalog)
### foot
#bindsym $mod+z			exec $term --app-id="float_spicules" \
#				sh -c $csc/fzf-spicules && wl-copy -n < $XDG_CACHE_HOME/cb
### alacritty
bindsym $mod+z			exec --no-startup-id $term --class="float_spicules" \
				--config-file $XDG_CONFIG_HOME/alacritty/bg_blue.toml \
				-e $csc/fzf-spicules #&& wl-copy -n < $XDG_CACHE_HOME/cb


#----------------------------------------------------------------
# specific container decorations
#----------------------------------------------------------------

## terminal float
for_window [app_id="term_float"]
{
    floating enable
    resize set width 800
    resize set height 600
    opacity set 0.8
    $smt Z
}

## terminal fullscreen
for_window [app_id="term_fullscreen"]
{
    fullscreen enable
}

## fzf_sway_exit
for_window [app_id="float_exit"]
{
    floating enable
    resize set width 300
    resize set height 150
    opacity set 0.95
    $smt NW
    #TODO this only works when no other alacritty windows are open
    ## workaround is specific alacritty config file (bg_red.toml)
    #exec $term msg config colors.primary.background='"#550000"'
}

## fzf_run
for_window [app_id="float_fzf_run"]
{
    floating enable
    resize set width 500
    resize set height 500
    opacity set 0.95
    $smt Z
    #TODO this only works when no other alacritty windows are open
    ## workaround is specific alacritty config file (bg_blue.toml)
    #exec $term msg config colors.primary.background='"#000020"'
}

## spicules
for_window [app_id="float_spicules"]
{
    #floating enable
    #resize set width 2000
    #resize set height 500
    opacity set 0.95
    $con_hfill
    #exec $csc/con-h-fill
    #TODO this only works when no other alacritty windows are open
    ## workaround is specific alacritty config file
    #exec $term msg config colors.primary.background='"#000020"'
}

## invisible float
for_window [app_id="term_float_inv"]
{
    floating enable
    resize set width 10
    resize set height 10
    opacity set 0.0
    move position 0 0
}

## show me the key
for_window [title="Floating Window - Show Me The Key"]
{
    floating enable
    sticky enable
    resize set width 280
    resize set height 70
    opacity set 0.8
    $smt NE
}


#----------------------------------------------------------------
# fzf clipboard manager
#----------------------------------------------------------------

## cache/cpbd is the clipboard list
#
# WARNING not intended for use with sensitive data!
# NO automatic migration (security feature!)
# TODO bindsym Control+Shift+o	secure copy (wl-copy -o)


## fzf_cpbd
### foot
#bindsym Control+Shift+y	exec $term --app-id="float_spicules" \
#	 			sh -c $csc/fzf-cpbd
### alacritty
bindsym Control+Shift+y		exec --no-startup-id $term --class="float_spicules" \
	 			-e $csc/fzf-cpbd


#----------------------------------------------------------------
# exit workspace
#----------------------------------------------------------------

# fzf_sway_exit			(shutdown menu)
### foot
#bindsym $mod+Shift+x		exec $term --app-id="float_exit" \
#				sh -c $csc/fzf-sway-exit
### alacritty
bindsym $mod+Shift+x		exec --no-startup-id $term --class="float_exit" \
				--config-file $XDG_CONFIG_HOME/alacritty/bg_red.toml \
				-e $csc/fzf-sway-exit

## swaylock			(Zzz)
## configuration: sway/code/lock

## screen backlight on/off
#bindsym $mod+Shift+s		exec $XDG_CONFIG_HOME/sway/code/screen_onf

### lock instantly
#### background (image/solid) via $csc/lock
bindsym $mod+Shift+z		exec sh $csc/dimr swaylock

### screen off
#bindsym $mod+Shift+Slash	exec $csc/dimr screen_off

### enable delay (lock after 2 * idle_time)
bindsym $mod+Control+Shift+e	exec sh $csc/dimr swaylock_enable 120

### disable delay (no lock after idle_time)
bindsym $mod+Control+Shift+d	exec sh $csc/dimr swaylock_disable

# reload sway configuration
bindsym $mod+Shift+c		reload


#----------------------------------------------------------------
# XF86 specific keys
#----------------------------------------------------------------

### i3blocks (old): && pkill -RTMIN+1 i3blocks
### for OLED (they have no backlight) screens; try icc-backlight (see notes)

## screen brightness
bindsym XF86MonBrightnessDown	exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp	exec brightnessctl set 5%+

# [GitHub - rileyrg/linux-init: Emacs org-file based suite of Linux config files and scripts](https://github.com/rileyrg/linux-init#swayidle-binswaysway-idle-----sleeplockidle)
#bindsym --locked XF86MonBrightnessUp exec --no-startup-id light -A 10 && sway-brightness-notify
#bindsym --locked XF86MonBrightnessDown exec --no-startup-id light -U 10 && sway-brightness-notify

## audio volume
### tpx1c using wireplumber
bindsym Control+Mod1+s  	exec wpctl set-volume	@DEFAULT_SINK@ 0.12
bindsym XF86AudioRaiseVolume	exec wpctl set-volume	@DEFAULT_SINK@ 5%+
bindsym XF86AudioLowerVolume 	exec wpctl set-volume	@DEFAULT_SINK@ 5%-
bindsym XF86AudioMute 		exec wpctl set-mute	@DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute 	exec wpctl set-mute	@DEFAULT_SOURCE@ toggle
bindsym F9			exec wpctl set-mute	@DEFAULT_SOURCE@ toggle
### pulse15 using alsamixer
#bindsym XF86AudioLowerVolume	exec amixer sset Master 2%-
#bindsym XF86AudioRaiseVolume	exec amixer sset Master 2%+
#bindsym XF86AudioMute		exec amixer sset Master toggle
### xps 9360
#bindsym XF86AudioMute		exec amixer sset Master toggle && \
#				amixer sset Speaker toggle && \
#				amixer sset Headphone toggle
# pactl set-sink-volume -5%
# pactl set-sink-mute

## audio control
# --locked allows a keybinding to be executed while the lockscreen is active
bindsym --locked XF86AudioPlay 	exec playerctl play-pause
bindsym XF86AudioNext 		exec playerctl next
bindsym XF86AudioPrev 		exec playerctl previous
#bindsym XF86AudioNext		exec lmc next
#bindsym XF86AudioPlay		exec lmc toggle
#bindsym XF86AudioPrev		exec lmc prev
#bindsym XF86AudioStop		exec lmc toggle

bindsym XF86Search 		exec $menu

## play music
bindsym $mod+m			exec --no-startup-id $term --class="float_spicules" \
				-e $csc/music-play

## switch microphone on/off
bindsym Shift+Control+Mod1+x	exec mic-switch toggle Webcam C310


#----------------------------------------------------------------
# screencapture
#----------------------------------------------------------------

# https://wiki.archlinux.org/index.php/Sway#Screen_capture

## current output
bindsym $mod+p			exec grim -o $(swaymsg -t get_outputs \
				| jq -r '.[] | select (.focused) | .name') \
				$XDG_DATA_HOME/a/media/images/scr_cap/`date "+%Y%m%d_%H%M%S"`.png && \
				notify-send 'scr_cap curr output'

## all outputs
bindsym $mod+Mod1+p		exec grim \
				$XDG_DATA_HOME/a/media/images/scr_cap/`date "+%Y%m%d_%H%M%S"`.png  && \
				notify-send 'scr_cap all outputs'

## selective rectangle
### to file
bindsym --release $mod+Shift+p	exec grim -g "$(slurp)" \
				$XDG_DATA_HOME/a/media/images/scr_cap/`date "+%Y%m%d_%H%M%S"`.png && \
				notify-send 'scr_cap selective rect'
### to clipboard
bindsym $mod+Control+p		exec grim -g "$(slurp)" | wl-copy && \
				notify-send 'scr_cap sel copy'

## imagemagick pixel enumeration
### pick a color
bindsym $mod+Mod1+c		exec grim -g "$(slurp -p)" -t ppm - | \
				convert - -format '%[pixel:p{0,0}]' txt:- | \
				wl-copy -n && \
				notify-send 'color data copy'

## secure copy
#bindsym Shift+Control+y	wl-copy -o -n && exec notify-send 'secure copy is in DEV'
bindsym Shift+Control+0		exec echo -n '' | wl-copy && notify-send 'clipboard cleared'

## current date_time copy
bindsym Control+Grave		exec date +'%Y%m%d_%H%M%S_%s' | wl-copy -n && notify-send 'date_time_epoch copied'


#----------------------------------------------------------------
# speech-to-text
#----------------------------------------------------------------

# nerd-dictation
# Shift+Control+Mod1		= A-C-S		(left)
# $mod+Shift+Control+Mod1	= M-A-C-S	(right)
bindsym Shift+Control+Mod1+e	exec vtxt begin en
bindsym Shift+Control+Mod1+r	exec vtxt end
bindsym Shift+Control+Mod1+n	exec vtxt begin nl
bindsym Shift+Control+Mod1+m	exec vtxt end
bindsym Shift+Control+Mod1+s	exec vtxt begin sv
bindsym Shift+Control+Mod1+d	exec vtxt end

# waybar
#exec waybar

# mako notification daemon
exec mako --config $XDG_CONFIG_HOME/mako/config

# [Home · swaywm/sway Wiki · GitHub]
# (https://github.com/swaywm/sway/wiki#gtk-applications-take-20-seconds-to-start)
# Alternatively, set GTK_USE_PORTAL=0 in your environment.
# More details: https://github.com/swaywm/sway/issues/5732
# [XDG Desktop Portal - ArchWiki](https://wiki.archlinux.org/title/XDG_Desktop_Portal)

# obs
# exec systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
# exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP=sway
# #exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway


# [Really really fix the XDG_CURRENT_DESKTOP export; upgpkg: 1:1.8.1-3 (2f9c63b0) · Commits · Arch Linux / Packaging / Packages / sway · GitLab]
# (https://gitlab.archlinux.org/archlinux/packaging/packages/sway/-/commit/2f9c63b0539119acb63d6028c61d41c7faa1cebb)

# sway does not set DISPLAY/WAYLAND_DISPLAY in the systemd user environment
# See FS#63021
# Adapted from xorg's 50-systemd-user.sh, which achieves a similar goal.

# Upstream refuses to set XDG_CURRENT_DESKTOP so we have to.
exec systemctl --user set-environment XDG_CURRENT_DESKTOP=sway
exec systemctl --user import-environment DISPLAY \
                                         SWAYSOCK \
                                         WAYLAND_DISPLAY \
                                         XDG_CURRENT_DESKTOP

exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY \
                                                  SWAYSOCK \
                                                  WAYLAND_DISPLAY \
                                                  XDG_CURRENT_DESKTOP=sway
