#! /usr/bin/env sh

###  _
### | |_ ___ _ __ _ __ ___      ___ _ __   __ ___      ___ __
### | __/ _ \ '__| '_ ` _ \    / __| '_ \ / _` \ \ /\ / / '_ \
### | ||  __/ |  | | | | | |   \__ \ |_) | (_| |\ V  V /| | | |
###  \__\___|_|  |_| |_| |_|___|___/ .__/ \__,_| \_/\_/ |_| |_|
###                       |_____|  |_|
###
###  # # # # # #
###       #
###  # # # # # #
###

: '
term_spawn
spawn a new terminal window
(c) 2019 - 2024  |  oxo

GNU GPLv3 GENERAL PUBLIC LICENSE
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
https://www.gnu.org/licenses/gpl-3.0.txt

@oxo@qoto.org


# dependencies
  jq, alacritty

# usage
  % term-spawn $directory [float [w $con_width h $con_height]]

# examples
  % term-spawn $HOME float w 300 h 300

# '


args="$@"


initialize()
{
    #terminal_cmd=${TERMINAL:-'foot'}
    terminal_cmd=${TERMINAL:-'alacritty'}
}


process_args()
{
    # while $1 true; do
    target_path=$1
    [[ $# -gt 1 ]] && shift target_con_float=$1 && shift && target_con_dims="$@"
}


get_curr_con_data()
{
    ## check container type, width and height
    curr_con_type=$(swaymsg -t get_tree | jq -r '.. | select(.type?) | select(.focused?) | .type')
    curr_con_width=$(swaymsg -t get_tree | jq '.. | select(.type?) | select(.focused?) | .rect.width')
    curr_con_height=$(swaymsg -t get_tree | jq '.. | select(.type?) | select(.focused?) | .rect.height')
    #curr_con_width=$(swaymsg -t get_tree | jq '.. | select(.type?) | select(.focused == true) | .rect.width')
    #curr_con_height=$(swaymsg -t get_tree | jq '.. | select(.type?) | select(.focused == true) | .rect.height')
}


split_auto()
{
    ## set the split direction to the longest side
    if [[ $curr_con_width -gt $curr_con_height ]]; then

	split_dir='splith'

    else

	split_dir='splitv'

    fi

    ## set split direction for focused container
    swaymsg "$split_dir"
}


process_target_path()
{
    case $target_path in

	pwd)
	    # get focused process ID

	    focused_pid=""
	    focused_pid="$(swaymsg -t get_tree | \
   			jq '.. |
   			select(.type?) |
   			select(.focused==true) |
			.pid')"


	    # readlink from focused ppid cwd

	    ## check if $focused_pid is an integer
	    if [ "$focused_pid" -eq "$focused_pid" 2>/dev/null ]; then

		## get focused parent process ID
		focused_ppid="$(ps -o pid= --ppid "$focused_pid" | awk '{print $1}')"

		## get focused present working directory
		if [ "$focused_ppid" 2>/dev/null ]; then

		    focused_pwd="$(readlink "/proc/$focused_ppid/cwd")"

		fi

	    else

		focused_pwd="$HOME"

	    fi
	    ;;

	'')
	    focused_pwd="$HOME"
	    ;;

	*)
	    focused_pwd="$target_path"
	    ;;

    esac
}


process_dim_args()
{
    while [[ "$1" ]]; do

	case "$1" in

	    'w')
		shift
		target_con_width=$1
		;;

	    'h')
		shift
		target_con_height=$1
		;;

	esac

	shift

    done
}


resize_float()
{
    target_con_width=${target_con_width:-800}
    target_con_height=${target_con_height:-600}

    #[[ -n $target_con_width ]] || target_con_width=800
    #[[ -n $target_con_height ]] || target_con_height=600

    ## TODO DEV not working because no focus
    swaymsg resize set width $target_con_width
    swaymsg resize set height $target_con_height
}


spawn_float()
{
    ## spawn terminal
    ## NOTICE --no-startup-id to prevent
    ## warning: queue 0x7efe7c000ca0 destroyed while proxies still attached
    #swaymsg exec --no-startup-id $($terminal_cmd --working-directory="$focused_pwd" --app-id="term_float") &
    #swaymsg exec --no-startup-id $($terminal_cmd --working-directory="$focused_pwd" --class="term_float") &
    swaymsg exec "$terminal_cmd --working-directory="$focused_pwd" --class='term_float'"

    if [[ -n "$target_con_dims" ]]; then

    	process_dim_args $target_con_dims
    	#TODO fix this
	#resize_float

    fi
}


spawn_tile()
{
    split_auto

    ## spawn terminal
    swaymsg exec --no-startup-id $($terminal_cmd --working-directory="$focused_pwd") &
    #swaymsg exec $($terminal_cmd --working-directory="$focused_pwd") &
}


spawn_terminal()
{
    if [[ "$target_con_float" == 'float' ]]; then

	spawn_float "$target_con_dims"

    else

	spawn_tile

    fi
}


main()
{
    initialize
    process_args "$args"
    get_curr_con_data
    process_target_path
    spawn_terminal
}

main
