#! /usr/bin/env sh

###  _
### | |_ ___ _ __ _ __ ___      ___ _ __   __ ___      ___ __
### | __/ _ \ '__| '_ ` _ \    / __| '_ \ / _` \ \ /\ / / '_ \
### | ||  __/ |  | | | | | |   \__ \ |_) | (_| |\ V  V /| | | |
###  \__\___|_|  |_| |_| |_|___|___/ .__/ \__,_| \_/\_/ |_| |_|
###                       |_____|  |_|
###
###  # # # # # #
###       #
###  # # # # # #
###

: '
term_spawn
spawn a new terminal window
(c) 2019 - 2024  |  oxo
----------------------------------------------------------------------
GNU GPLv3 GENERAL PUBLIC LICENSE
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
https://www.gnu.org/licenses/gpl-3.0.txt

@oxo@qoto.org
======================================================================


# dependencies
  jq, alacritty

# usage
  % term-spawn $directory [float [w $con_width h $con_height] [x $x_coor y $y_coor]]

# examples
  % term-spawn $HOME float w 300 h 300 x 200 y 200

# '


target_path=$1
shift
args=$@


function sourcing ()
{
    csc="$XDG_CONFIG_HOME/sway/code"
}


function initialize ()
{
    #terminal_cmd=${TERMINAL:-'foot'}
    terminal_cmd=${TERMINAL:-'alacritty'}
}


function process_args ()
{
    while [ $# -gt 0 ]; do
	## args is not empty

	case "$1" in

	    float )
		target_con_float="$1"
		shift
		;;

	    * )
		[ -n $target_con_float ] && target_con_dims="$@"
		return
		;;

	esac

    done
}


function get_curr_con_data ()
{
    sh $csc/get-focus-data debug
    # sh $csc/get-focus-data
}


function split_auto ()
{
    ## set the split direction to the longest side
    if [[ $container_width -gt $container_height ]]; then

	split_dir='splith'

    else

	split_dir='splitv'

    fi

    ## set split direction for focused container
    swaymsg "$split_dir"
}


function process_target_path ()
{
    case $target_path in

	pwd)
	    # get focused process ID

	    focused_pid=""
	    focused_pid="$(swaymsg -t get_tree | \
   			jq '.. |
   			select(.type?) |
   			select(.focused==true) |
			.pid')"


	    # readlink from focused ppid cwd

	    ## check if $focused_pid is an integer
	    if [ "$focused_pid" -eq "$focused_pid" 2>/dev/null ]; then

		## get focused parent process ID
		focused_ppid="$(ps -o pid= --ppid "$focused_pid" | awk '{print $1}')"

		## get focused present working directory
		if [ "$focused_ppid" 2>/dev/null ]; then

		    focused_pwd="$(readlink "/proc/$focused_ppid/cwd")"

		else

		    dir-stack
		    focused_pwd="$(head -n 1 <<< "$dir_stack")"
		    [[ -d "$focused_pwd" ]] || focused_pwd="$HOME"

		fi

	    else

		focused_pwd="$HOME"

	    fi
	    ;;

	'')
	    focused_pwd="$HOME"
	    ;;

	*)
	    focused_pwd="$target_path"
	    ;;

    esac
}


function process_dim_args ()
{
    while [[ "$1" ]]; do

	case "$1" in

	    'w')
		shift
		target_con_width=$1
		;;

	    'h')
		shift
		target_con_height=$1
		;;

	    'x')
		shift
		target_con_xcoor=$1
		;;

	    'y')
		shift
		target_con_ycoor=$1
		;;

	esac

	shift

    done
}


function resize_float ()
{
    # target_con_width=${target_con_width:-800}
    # target_con_height=${target_con_height:-600}

    # [[ -n $target_con_width ]] || target_con_width=800
    # [[ -n $target_con_height ]] || target_con_height=600

    ## TODO DEV not working because no focus
    swaymsg resize set width $target_con_width
    swaymsg resize set height $target_con_height
}


function move_float ()
{
    swaymsg move position $target_con_xcoor $target_con_ycoor
}


function spawn_float ()
{
    ## spawn terminal
    ## NOTICE --no-startup-id to prevent
    ## warning: queue 0x7efe7c000ca0 destroyed while proxies still attached
    #swaymsg exec --no-startup-id $($terminal_cmd --working-directory="$focused_pwd" --app-id="term_float") &
    #swaymsg exec --no-startup-id $($terminal_cmd --working-directory="$focused_pwd" --class="term_float") &
    swaymsg exec "$terminal_cmd --working-directory="$focused_pwd" --class='term_float'"
    sleep 0.2

    if [[ -n "$target_con_dims" ]]; then

    	process_dim_args $target_con_dims
    	#TODO fix this
	#resize_float
	#TODO DEV focus spawned container
	float_id_max=$(swaymsg -t get_tree | jq '.. | select(.type?) | select(.type=="floating_con") | .id' | sort --numeric-sort | tail -n 1)
	swaymsg [con_id="$float_id_max"] focus
	get_curr_con_data
	resize_float

    fi

    if [[ -n "$target_con_xcoor" && -n "$target_con_ycoor" ]]; then

	move_float

    fi
}


function spawn_tile ()
{
    split_auto

    ## spawn terminal
    swaymsg exec --no-startup-id $($terminal_cmd --working-directory="$focused_pwd") &
    #swaymsg exec $($terminal_cmd --working-directory="$focused_pwd") &
}


function spawn_terminal ()
{
    if [[ "$target_con_float" == 'float' ]]; then

	spawn_float "$target_con_dims"

	#TODO DEV focus spawned container
	# get_curr_con_data
	# resize_float

    else

	spawn_tile

    fi
}


function main ()
{
    sourcing
    initialize
    process_args $args
    get_curr_con_data
    process_target_path
    spawn_terminal
}

main
