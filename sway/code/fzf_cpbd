#! /usr/bin/env sh
: '
            _         _
  ___ _ __ | |__   __| |
 / __| '_ \| '_ \ / _` |
| (__| |_) | |_) | (_| |
 \___| .__/|_.__/ \__,_|
     |_|
 _    _
(_)><(_)

cpbd
clipboard list
manage multiple copied items

WARNING not intended for use with sensitive data!

usage:
    add wl-copy to clipboard list:
	1. select items
	2. wl-copy	C-S-c
	3. cpbd_add	C-S-y a

    put clipboard list to wl-copy:
	1. cpbd_put	C-S-y p
	2. fzf select
	3. wl-paste	C-S-v

    remove items from clipboard list:
	1. cpbd_remove	C-S-y r
	2. fzf select

    remove all; clear entire clipboard list:
	1. cpbd_remove	C-S-y ra

keybinds defined in sway config
# '


arg=$1

cpbd_file="$XDG_CACHE_HOME/cpbd"


choose_option()
{
    option=$(printf '%s\n%s\n%s\n%s' 'add' 'put' 'remove' 'remove_all' | fzf --prompt 'action to perform on cpbd ')

    case $option in

	add)
	    add
	    ;;

	put)
	    put
	    ;;

	remove)
	    remove_item
	    ;;

	remove_all)
	    remove_all
	    ;;

    esac
}


remove_empty_lines()
{
    sed -i '/^[[:space:]]*$/d' $cpbd_file
}


remove_duplicates()
{
    sort -u $cpbd_file > ${cpbd_file}_1
    update_cpbd_file
}


update_cpbd_file()
{
    mv -f ${cpbd_file}_1 $cpbd_file
}


## add current wl-clipboard item to cpbd_file (clipboard list)
add()
{
    cpbd_lines_0=$(cat $cpbd_file | wc -l)

    # do not add empty lines
    case $cp_item in

	'\n')
	    exit
	    ;;

	*)
	    ## remove any leading spaces
	    wl-paste | sed 's/^[[:space:]]*//' >> $cpbd_file
	    ;;

    esac

    unset cp_item
    unset lines_add

    remove_empty_lines
    remove_duplicates

    cpbd_lines_1=$(cat $cpbd_file | wc -l)

    lines_add=$(( cpbd_lines_1 - cpbd_lines_0 ))

    [[ $lines_add -gt 0 ]] && notify-send "cpbd: added $lines_add lines to list"
    [[ $lines_add -eq 0 ]] && notify-send "cpbd: no lines added"
}


## put items from cpbd to wl-copy
put()
{
    [[ -z $(cat $cpbd_file) ]] && notify-send "cpbd: no list items" && exit

    put_exec=$(cat $cpbd_file | fzf -m --prompt='put to wl-copy ')

    printf '%s' "$put_exec" | wl-copy

    [[ -n $put_exec ]] && lines_put=$(wl-paste | wc -l)

    [[ $lines_put -gt 0 ]] && notify-send "cpdb: put $lines_put lines to wl-copy"

    unset put_exec
    unset lines_put
}


## remove selected item(s) from cpbd
remove_item()
{
    cpbd_lines_0=$(cat $cpbd_file | wc -l)

    remove_item_exec=$(cat $cpbd_file | fzf -m --prompt='remove from list ')
#TODO check this
    while IFS= read -r line; do

	grep --invert-match --line-regexp "$line" $cpbd_file > ${cpbd_file}_1

	update_cpbd_file

    done <<< "$remove_item_exec"

    cpbd_lines_1=$(cat $cpbd_file | wc -l)

    lines_remove=$(( -1 * (cpbd_lines_1 - cpbd_lines_0) ))

    [[ $lines_remove -gt 0 ]] && notify-send "cpbd: removed $lines_remove lines from list"

    unset remove_item_exec
    unset lines_remove
}


## remove all item(s) from cpbd
remove_all()
{
    rm $cpbd_file

    notify-send "cpbd: removed list"
}


main()
{
    choose_option
}

main
