#! /usr/bin/env sh

## create floating window and distribute it's width

divisor_arg=$1

set_params()
{
    monitor_dimensions=$(
	swaymsg -t get_workspaces |
	    jq -r '.. | select(.focused?) |
	    select(.type=="workspace") |
	    .rect |
	    "\(.width)x\(.height)"' \
		      )

    monitor_width=${monitor_dimensions%x*}
    monitor_height=${monitor_dimensions#*x}

    selection=".focused?"
    criteria=
    [[ "$id" ]] && \
	{
	    selection=".id == $id"
	    criteria="[con_id = $id]"
	}

    mapfile -t window_params_arr < <( \
	swaymsg -t get_tree | \
	    jq -r ".. |
	    select(.type?) |
	    select($selection) |
	    .rect.x, .rect.y,
	    .rect.width, .rect.height,
	    .deco_rect.height, .type" \
		)

    new_x=${window_params_arr[0]}
    new_y=${window_params_arr[1]}
    window_width=${window_params_arr[2]}
    window_height=${window_params_arr[3]}
    decor_height=${window_params_arr[4]}
    window_type=${window_params_arr[5]}
}


con_resize()
{
    case $divisor_arg in

	# 1/6, 1/3, 1/2, 2/3, 5/6 and full width
	## NOTICE $mod+Mod1+9 (maximize) also enables full width
	1|2|3|4|5|6)
	    counter=$divisor_arg
	    divisor=6
	    ;;

	#*)
	#    counter=1
	#    divisor=$divisor_arg
	#    ;;

    esac

    set_width=$(echo "scale=0; $monitor_width*$counter/$divisor" | bc)
    set_height=$(echo "scale=0; $monitor_height*$counter/$divisor" | bc)

    swaymsg "${criteria}resize set width $set_width px height $set_height px"
}


main()
{
    set_params
    con_resize
}

main
