#! /usr/bin/env sh

# move poiner to absolute or relative position

## absolute monitor position
## synopsis: poiner-to [--id] [$con_id] -x xpt -y ypt

## relative focused container position
## synopsis: poiner-to [--id] [$con_id] -x x% -y y%

# synopsis: poiner-to [$con_id] $x[%] $y[%]
# usage: poiner-to --id 5 -x 50 -y 50%


csbe="$XDG_CONFIG_HOME/status/bar/element"
source $csbe/get-focus-data

## loop through all arguments
while [[ "$1" ]]; do

    case "$1" in

        -i | --id)
	    ## get container id value
            shift
            con_id="$1"
	    swaymsg [con_id="$container_id"] focus
            shift
            ;;

        -x)
	    ## get x value
            shift
            x_arg="$1"
            shift
            ;;

        -y)
	    ## get y value
            shift
            y_arg="$1"
            shift
            ;;

    esac

done


case "${x_arg: -1}" in

    '%')
	## relative x
	x_rel="${x_arg::-1}"
	x_pos=$(echo "$container_x + ($x_rel * $container_width / 100)" | bc)
	;;

    *)
	## absolute x
	x_pos="$x_arg"
	;;

esac


case "${y_arg: -1}" in

    '%')
	## relative y value
	y_rel="${y_arg::-1}"
	y_pos=$(echo "$container_y + ($y_rel * $container_height / 100)" | bc)
	;;

    *)
	## absolute x
	y_pos="$y_arg"
	;;

esac

## calculate dotool percentages
x_dt_rel=$(printf '%.3f\n' "$(echo "scale=3; $x_pos / $monitor_width" | bc)")
y_dt_rel=$(printf '%.3f\n' "$(echo "scale=3; $y_pos / $monitor_height" | bc)")

## dotool move mouse poiner
# NOTICE this works with single monitor setup
#TODO dotool grid with 2 monitors is 2 monitors wide
echo mouseto $x_dt_rel $y_dt_rel | dotoolc
