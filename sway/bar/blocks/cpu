#! /usr/bin/env sh

## get data
user0=$(awk '/cpu / {print $2}' /proc/stat)
nice0=$(awk '/cpu / {print $3}' /proc/stat)
system0=$(awk '/cpu / {print $4}' /proc/stat)
idle0=$(awk '/cpu / {print $5}' /proc/stat)
iowait0=$(awk '/cpu / {print $6}' /proc/stat)
irq0=$(awk '/cpu / {print $7}' /proc/stat)
softirq0=$(awk '/cpu / {print $8}' /proc/stat)
steal0=$(awk '/cpu / {print $9}' /proc/stat)
guest0=$(awk '/cpu / {print $10}' /proc/stat)
guest_nice0=$(awk '/cpu / {print $11}' /proc/stat)

total_tick0=$((user0+nice0+system0+idle0+iowait0+irq0+softirq0+steal0+guest0+guest_nice0))
load0=$((total_tick0-idle0))

sleep 1

user1=$(awk '/cpu / {print $2}' /proc/stat)
nice1=$(awk '/cpu / {print $3}' /proc/stat)
system1=$(awk '/cpu / {print $4}' /proc/stat)
idle1=$(awk '/cpu / {print $5}' /proc/stat)
iowait1=$(awk '/cpu / {print $6}' /proc/stat)
irq1=$(awk '/cpu / {print $7}' /proc/stat)
softirq1=$(awk '/cpu / {print $8}' /proc/stat)
steal1=$(awk '/cpu / {print $9}' /proc/stat)
guest1=$(awk '/cpu / {print $10}' /proc/stat)
guest_nice1=$(awk '/cpu / {print $11}' /proc/stat)

total_tick1=$((user1+nice1+system1+idle1+iowait1+irq1+softirq1+steal1+guest1+guest_nice1))
load1=$((total_tick1-idle1))

cpu_perc=$((100*(load1-load0)/(total_tick1-total_tick0)))
cpu=$(printf "%02d" $cpu_perc)

## color
var=$cpu  ## inverted values; lower is better

## minimum, maximum value and number of threshold (colors)
## number of colors = no_thr + 2
min=5
max=95
no_thr=5

## interval size
int=$(echo "scale=0; ($max - $min) / $no_thr" | bc -l)

## full text
printf "%02d\n" $cpu_perc

## short text
echo  ## none

## text
(( $var > $(( min + 5 * int )) )) && echo "#ff6c60"  ## red
(( $var > $(( min + 4 * int )) && $var <= $(( min + 5 * int )) )) && echo "#ffffb6"  ## yellow
(( $var > $(( min + 3 * int )) && $var <= $(( min + 4 * int )) )) && echo "#ffbf00"  ## amber
(( $var > $(( min + 2 * int )) && $var <= $(( min + 3 * int )) )) && echo "#96cbfe"  ## blue
(( $var > $(( min + 1 * int )) && $var <= $(( min + 2 * int )) )) && echo "#aaaaaa"  ## greyaa
(( $var > $(( min + 0 * int )) && $var <= $(( min + 1 * int )) )) && echo "#999999"  ## grey99
(( $var <= $(( min + 0 * int )) )) && echo  ## default

## background
(( $var > $(( min + 5 * int )) )) && echo  ## default
(( $var > $(( min + 4 * int )) && $var <= $(( min + 5 * int )) )) && echo  ## default
(( $var > $(( min + 3 * int )) && $var <= $(( min + 4 * int )) )) && echo  ## default
(( $var > $(( min + 2 * int )) && $var <= $(( min + 3 * int )) )) && echo  ## default
(( $var > $(( min + 1 * int )) && $var <= $(( min + 2 * int )) )) && echo  ## default
(( $var > $(( min + 0 * int )) && $var <= $(( min + 1 * int )) )) && echo  ## default
(( $var <= $(( min + 0 * int )) )) && echo  ## default

## border
(( $var > $(( min + 5 * int )) )) && echo  ## default
(( $var > $(( min + 4 * int )) && $var <= $(( min + 5 * int )) )) && echo  ## default
(( $var > $(( min + 3 * int )) && $var <= $(( min + 4 * int )) )) && echo  ## default
(( $var > $(( min + 2 * int )) && $var <= $(( min + 3 * int )) )) && echo  ## default
(( $var > $(( min + 1 * int )) && $var <= $(( min + 2 * int )) )) && echo  ## default
(( $var > $(( min + 0 * int )) && $var <= $(( min + 1 * int )) )) && echo  ## default
(( $var <= $(( min + 0 * int )) )) && echo  ## default
