https://qutebrowser.org/doc/faq.html
How do I make qutebrowser use greasemonkey scripts?

There is currently no UI elements to handle managing greasemonkey scripts. All management of what scripts are installed or disabled is done in the filesystem by you. qutebrowser reads all files that have an extension of .js from the <data>/greasemonkey/ folder and attempts to load them. Where <data> is the qutebrowser data directory shown in the Paths section of the page displayed by :version. If you want to disable a script just rename it, for example, to have .disabled on the end, after the .js extension. To reload scripts from that directory run the command :greasemonkey-reload.

Troubleshooting: to check that your script is being loaded when :greasemonkey-reload runs you can start qutebrowser with the arguments --debug --logfilter greasemonkey,js and check the messages on the programâ€™s standard output for errors parsing or loading your script. You may also see javascript errors if your script is expecting an environment that we fail to provide.

Note that there are some missing features which you may run into:

Some scripts expect GM_xmlhttpRequest to ignore Cross Origin Resource Sharing restrictions, this is currently not supported, so scripts making requests to third party sites will often fail to function correctly.

Any greasemonkey API function to do with adding UI elements is not currently supported. That means context menu extentensions and background pages.

nrc
In order to make this work, remove '-popup' from 'var paywallPopup = document.getElementsByClassName('paywall-popup');' (4th to last line).
