(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 '(column-number-mode t)
 '(custom-enabled-themes (quote (misterioso)))
 '(global-hl-line-mode nil)
 '(ido-mode nil nil (ido))
 '(inhibit-startup-screen t)
 '(initial-scratch-message nil)
 '(menu-bar-mode nil)
 '(nlinum-mode nil)
 '(package-selected-packages
   (quote
    (powerline-evil org-capture-pop-frame org-agenda-property ivy evil-org)))
 '(scroll-bar-mode nil)
 '(show-parent-mode nil)
 '(tool-bar-mode nil)
 '(tooltip-mode nil)
 '(windmove-default-keybindings nil)
 '(winner-mode t))

(require 'package)
(add-to-list
 'package-archives
   '(("melpa" . "https://melpa.org/packages/") t)
   '(("gnu" . "https://elpa.gnu.org/packages/") t)
)

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

(add-to-list 'load-path "~/.emacs.d/evil")
(require 'evil)
(evil-mode 1)

;;(require 'alpha)
;;(set-frame-parameter (selected-frame) 'alpha '(85 . 50))
;;(add-to-list 'default-frame-alist '(alpha . (85 . 50)))
;;(defun toggle-transparency ()
;;  (interactive)
;;  (let ((alpha (frame-parameter nil 'alpha)))
;;    (set-frame-parameter
;;     nil 'alpha
;;     (if (eql (cond ((numberp alpha) alpha)
;;                    ((numberp (cdr alpha)) (cdr alpha))
;;                    ;; Also handle undocumented (<active> <inactive>) form.
;;                    ((numberp (cadr alpha)) (cadr alpha)))
;;              100)
;;         '(85 . 50) '(100 . 100)))))
;;(global-set-key (kbd "C-c t") 'toggle-transparency)
;; Set transparency of emacs
;;(defun transparency (value)
;;  "Sets the transparency of the frame window. 0=transparent/100=opaque"
;;  (interactive "nTransparency Value 0 - 100 opaque:")
;;  (set-frame-parameter (selected-frame) 'alpha value))
