#!/bin/bash
#
##
### dimr
###	creates options for swaylock
###
### (c) 2019 - 2023  |  oxo
###
### usage:
###
###	% dimr swaylock_enable
###	enabls swaylock timer to lock system after 2 * idle_time
###
###	% dimr swaylock_disable
###	disables swaylock timer function
###
###	% dimr screen_off [idle_time]
###	immediate screen_off
###
###	% dimr swaylock [idle_time]
###	initiate swaylock
##
#

[[ "$SWAYSOCK" ]] &&
{
    dimr="$XDG_CONFIG_HOME/code/sway/dimr"
    idle_time=$2
    [[ -z $idle_time ]] && idle_time=120


    swaylock_status()
    {
	swaylock_status=$(ps -ef | \
	    grep -v ^root | \
	    grep 'swayidle -w' | \
	    grep 'dimr' | \
	    awk -F : '{print $4}' | \
	    awk 'NF>1{print $NF}')

	# [Sway - ArchWiki](https://wiki.archlinux.org/title/Sway#Idle)
	# lock the screen before suspending and pause any playing media
	swayidle -w \
		 before-sleep 'playerctl pause' \
		 before-sleep 'swaylock'
    }


    swaylock_exec()
    {
	sh $XDG_CONFIG_HOME/code/sway/lock
    }


    screen_off_exec()
    {
    	swaylock_status

	if [[ "$swaylock_status" == "no_swaylock" ]]; then

	    pkill swayidle
	    swayidle -w \
	        timeout 1   "swaymsg 'output * dpms off'" \
	        resume	    "swaymsg 'output * dpms on'; pkill swayidle; $dimr swaylock_disable"

	elif [[ "$swaylock_status" == "swaylock" ]]; then

	    pkill swayidle
	    swayidle -w \
	        timeout 1   "swaymsg 'output * dpms off'" \
	        resume	    "swaymsg 'output * dpms on'; pkill swayidle; $dimr swaylock_enable"

	else

	    # undefined or other swaylock_status
	    pkill swayidle
	    swayidle -w \
	        timeout 1   "swaymsg 'output * dpms off'" \
	        resume	    "swaymsg 'output * dpms on'; pkill swayidle"

	fi
    }


    swaylock_enable()
    {
	pkill swayidle
        swayidle -w \
	    timeout $idle_time	"swaymsg 'output * dpms off'" \
	    resume		"swaymsg 'output * dpms on'" \
            timeout $(( 2 * idle_time )) \
				"swaymsg 'output * dpms on'; $dimr swaylock" \
            timeout $(( 3 * idle_time )) \
				"sudo systemctl suspend" \
            before-sleep        "$dimr swaylock" & \
				notify-send "enabled swaylock $idle_time"
	}


    swaylock_disable()
    {
	pkill swayidle
        swayidle -w \
	    timeout $idle_time  "swaymsg 'output * dpms off'" \
                resume		"swaymsg 'output * dpms on'" \
	        before-sleep	"$dimr no_swaylock" & \
				notify-send "disabled swaylock $idle_time"
	}


    case "$1" in

	swaylock)

	    ## immediate swaylock
	    swaylock_exec
	    ;;

	screen_off)

	    ## immediate screen off
	    screen_off_exec
	    ;;

	swaylock_disable)

	    ## disable swaylock
	    swaylock_disable
	    ;;

        swaylock_enable | *)

	    ## enable swaylock
	    swaylock_enable
            ;;

    esac

    exit $?
}
