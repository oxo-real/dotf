#!/usr/bin/env sh

source $XDG_DATA_HOME/c/git/code/source/function/text_appearance

if [ -d /sys/class/power_supply/BAT0 ]; then

    batt_status="$(cat /sys/class/power_supply/BAT0/status | tr '[:upper:]' '[:lower:]')"

    batt_perc="$(cat /sys/class/power_supply/BAT0/capacity)"

    ## translate from decimal to single hexadecimal digit
    bt_pc_015=$(echo $(( batt_perc*16/100 )))
    #bt_pc_015=$(echo $(( batt_perc*15/100 )))
    batt_hex=$(echo "obase=16; ibase=10; $bt_pc_015" | bc)

    # discharging - color background
    # charging - color foregrtound
    # E-F no color added
    # A-D blue
    # 8-9 yellow
    # 5-7 magenta
    # 0-4 red
    hex_is_number=$(printf "$batt_hex" | grep -Eo '[0-9]')

    case $batt_status in

        discharging)
	    # colored background on discharge
	    batt_color_bg=($RED_BG $RED_BG $RED_BG $RED_BG $RED_BG $MAGENTA_BG $MAGENTA_BG $MAGENTA_BG $YELLOW_BG $YELLOW_BG)
	    color_bg=${batt_color_bg[$batt_hex]}

	    if [[ "$bt_pc_015" -le 9 ]]; then

		format="${color_bg}%s${NOC}"

	    elif [[ "$bt_pc_015" -ge 10 ]] && \
		     [[ "$bt_pc_015" -le 13 ]]; then

		format="${BLUE_BG}%s${NOC}"

	    else

		format="%s"

	    fi

            flow="â€”"
            ;;

        charging)
	    # colored foreground on charge
	    batt_color=($RED $RED $RED $RED $RED $MAGENTA $MAGENTA $MAGENTA $YELLOW $YELLOW)
	    color=${batt_color[$batt_hex]}

	    if [[ "$bt_pc_015" -le 9 ]]; then

		format="${color}%s${NOC}"

	    elif [[ "$bt_pc_015" -ge 10 ]] && \
		     [[ "$bt_pc_015" -le 13 ]]; then

		format="${BLUE}%s${NOC}"

	    else

		format="%s"

	    fi

            flow="+"
            ;;

        full | 'not charging')
	    format="%s"

            flow="="
            ;;

        *)
	    format="?%s"

            flow="?"
            ;;

    esac

fi

batt_perc_numeric=$((batt_perc))

batt_afdec=$(echo "16-6/100*$batt_perc_numeric" | bc -l)
batt_afd=$(echo $batt_afdec | cut -d '.' -f 1)
batt_af=$(echo "obase=16; ibase=10; $batt_afd" | bc)
#printf "$format" "$batt_hex"
#printf "$format" "$batt_hex$flow"

# extra echo necessary for coloring in swaybar

echo "${batt_af}$flow"
#echo "$batt_hex$flow"
#echo "$batt_perc$flow"

case $batt_status in

    discharging)
	# border text background
	# !! finer granularity than 2 stages causes unpredictable behaviour
	[[ $batt_perc -le 39 ]] && exit 33
	#[[ $batt_perc -le 39 ]] && echo && echo "#ffffd3" && echo "#770055" #&& echo "#000000"
	#[[ $batt_perc -le 69 ]] && echo && echo "#000000" && echo "#ffa500" #&& echo "#000000"
	#[[ $batt_perc -le 79 ]] && echo && echo "#000000" && echo "#96cbfe" #&& echo "#000000"
	[[ $batt_perc -le 79 ]] && echo && echo "#000000" && echo "#ff73fd" #&& echo "#000000"
	#[[ $batt_perc -le 79 ]] && echo && echo "#770055" && echo "#777777" #&& echo "#000000"
	#[[ $batt_perc -le 79 ]] && echo && echo "#ffffd3" && echo "#777777" #&& echo "#000000"
	;;

    charging)
	# echo text background border
	# !! finer granularity than 2 stages causes unpredictable behaviour
	[[ $batt_perc -le 39 ]] && exit 33
	#[[ $batt_perc -le 78 ]] && echo && echo "#ff0000" #&& echo "#000000" #&& echo "#000000"
	#[[ $batt_perc -le 39 ]] && echo && echo "#770055" && echo "#000000" #&& echo "#000000"
	#[[ $batt_perc -le 39 ]] && echo && echo "#770055" && echo "#000000" #&& echo "#000000"
	#[[ $batt_perc -le 69 ]] && echo && echo "#ffffff" && echo "#000000" #&& echo "#000000"
	[[ $batt_perc -le 79 ]] && echo && echo "#ff73fd" #&& echo "#000000" #&& echo "#000000"
	;;

esac

exit 0
